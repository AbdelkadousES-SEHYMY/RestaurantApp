// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantApp.DataAccess.Data;

#nullable disable

namespace RestaurantApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230326152521_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RestaurantApp.Models.Cuisin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Cuisin");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Cuisins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Traditional Moroccan dishes",
                            Name = "Moroccan",
                            Position = 1,
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Traditional French dishes",
                            Name = "French",
                            Position = 2,
                            RestaurantId = 2
                        });
                });

            modelBuilder.Entity("RestaurantApp.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Name");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Restaurant");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "456 Second St",
                            Description = "A classic French bistro",
                            Name = "French Bistro",
                            phoneNumber = "1234590"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "789 Third St",
                            Description = "A trendy Japanese sushi bar",
                            Name = "Sushi Bar",
                            phoneNumber = "1234566"
                        });
                });

            modelBuilder.Entity("RestaurantApp.Models.Cuisin", b =>
                {
                    b.HasOne("RestaurantApp.Models.Restaurant", "Restaurant")
                        .WithMany("Cuisins")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Cuisins_RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantApp.Models.Restaurant", b =>
                {
                    b.Navigation("Cuisins");
                });
#pragma warning restore 612, 618
        }
    }
}
